{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_directives/alert.component.ts","webpack:///src/app/_directives/alert.component.html","webpack:///src/app/_directives/date.picker.ts","webpack:///src/app/_directives/date.picker.html","webpack:///src/app/_directives/index.ts","webpack:///src/app/_entry/finished_material.ts","webpack:///src/app/_entry/finished_material.html","webpack:///src/app/_entry/raw_material.ts","webpack:///src/app/_entry/raw_material.html","webpack:///src/app/_entry/report.ts","webpack:///src/app/_entry/reports.html","webpack:///src/app/_entry/sales.ts","webpack:///src/app/_entry/sales.html","webpack:///src/app/_entry/semi.finished.ts","webpack:///src/app/_entry/semi_finished.html","webpack:///src/app/_guards/auth.guard.ts","webpack:///src/app/_guards/index.ts","webpack:///src/app/_helpers/error.interceptor.ts","webpack:///src/app/_helpers/fake-backend.ts","webpack:///src/app/_helpers/index.ts","webpack:///src/app/_helpers/jwt.interceptor.ts","webpack:///src/app/_models/index.ts","webpack:///src/app/_models/user.ts","webpack:///src/app/_services/alert.service.ts","webpack:///src/app/_services/api.service.ts","webpack:///src/app/_services/authentication.service.ts","webpack:///src/app/_services/index.ts","webpack:///src/app/_services/user.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/component/filter-comp.ts","webpack:///src/app/component/filter-comp.html","webpack:///src/app/component/index.ts","webpack:///src/app/component/printpage.component.ts","webpack:///src/app/component/print-page.component.html","webpack:///src/app/component/reports/index.ts","webpack:///src/app/component/reports/rawMaterial.report.ts","webpack:///src/app/component/reports/rawMaterial.report.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/index.ts","webpack:///src/app/loader/loader.component.ts","webpack:///src/app/loader/loader.component.html","webpack:///src/app/loader/spinner.service.ts","webpack:///src/app/login/index.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AlertComponent","alertService","subscription","getMessage","subscribe","message","unsubscribe","selector","templateUrl","DatePicker","calendar","formatter","hoveredDate","fromDate","getToday","toDate","getNext","date","after","before","equals","isInside","isHovered","currentValue","input","parsed","parse","isValid","from","onDateSelection","validateInput","styleUrls","FinishedMaterial","apiService","fb","uri","status","disable","productlist","size_map","sizedropdown","action","flag","dataTosave","entryform","group","challan","required","recdate","product","min","size","qty","getChallanNo","getFinishedlist","data","controls","setValue","console","log","target","value","add","update","row","get","stock","populate_weight_stock","refresh","obj","search","getFinishedPrdCfg","d","cosumed_semi_prod","cosumed_raw","forEach","element","semi","semiProdList","push","raw","material","weight","toFixed","rawMaterialList","datejson","saveProducttxn","prefix","itemID","itenId","submit","searchChallan","editChallan","onChange","RawMaterial","materialist","getRawAll","type","searchChallanRaw","Date","currentActiveRowid","indexOfelement","ele","splice","saveRaw","ngOnInit","Reports","events","searchParam","generateReport","SalesCompoent","vehicleNumber","description","saveSales","SemiFinishedProduct","getSemiFinishedAll","product_size","getRawCfg","wastage","onSizeChange","saveSemiProduct","AuthGuard","acct","router","route","state","isLoggedIn","pipe","loginStatus","destination","url","productId","params","navigate","queryParams","returnUrl","providedIn","ErrorInterceptor","authenticationService","request","next","handle","err","logout","location","reload","error","statusText","FakeBackendInterceptor","users","JSON","localStorage","getItem","endsWith","method","filteredUsers","filter","user","username","body","password","length","firstName","lastName","token","headers","match","urlParts","split","parseInt","matchedUsers","newUser","duplicateUser","setItem","stringify","i","fakeBackendProvider","provide","useClass","multi","JwtInterceptor","clone","setHeaders","Authorization","User","RawMaterialImp","SemiFinishedImpl","FinishedProductImpl","Sales","AlertService","subject","keepAfterNavigationChange","event","text","asObservable","ApiService","http","window","clear","sessionStorage","link","_body","indexOf","href","baseruri","origin","api","searchparms","post","searchParams","lookingForid","AuthenticationService","checkLoginStatus","baseuri","result","expiration","userRole","loginCookie","undefined","decoded","exp","tokenExpDate","setUTCSeconds","valueOf","removeItem","UserService","apiUrl","put","routes","AppRoutingModule","forRoot","imports","AppComponent","AppModule","declarations","providers","bootstrap","appRoutes","path","component","canActivate","pathMatch","redirectTo","routing","Filters","disabled","ShowFilter","limitSelection","inventory","showlist","selectedItems","selectedsearch","dropdownSettings","singleSelection","idField","textField","itemsShowLimit","allowSearchFilter","myForm","trans","searchBy","searchReportOptions","reportTypes","item","item_id","items","Object","assign","lookfor","reportType","emit","print","onItemSelect","j","PrintPageComponent","apiserive","cdr","dtRendered","dtOptions","dtTrigger","columns","jsonData","jsonData1","fetch","repotTitle","option","getOptions","SIH","getSIH","results","options","updateData","transaction","getTransactionData","generateData","destroy","searching","displayLength","paginationType","processing","dom","buttons","extend","title","responsive","detectChanges","get_Stock_in_hand","getTransactions","RawMaterialReport","cdRef","recrods","dtElement","dtInstance","HeaderComponent","authService","isLoggedIn$","HomeComponent","userService","currentUser","loadAllUsers","getAll","LoaderComponent","spinnerService","showSpinner","init","getSpinnerObserver","SpinnerService","count","spinner$","LoginComponent","formBuilder","Username","Password","snapshot","loginForm","userlogin","invalid","login","invalidLogin","navigateByUrl","ErrorMessage","loginError","onSubmit","environment","production","document","domain","envName","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { AlertService } from '../_services';\n\n@Component({\n    selector: 'alert',\n    templateUrl: 'alert.component.html'\n})\n\nexport class AlertComponent implements OnInit, OnDestroy {\n    private subscription: Subscription;\n    message: any;\n\n    constructor(private alertService: AlertService) { }\n\n    ngOnInit() {\n        this.subscription = this.alertService.getMessage().subscribe(message => { \n            this.message = message; \n        });\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n}","<div *ngIf=\"message\" [ngClass]=\"{ 'alert': message, 'alert-success': message.type === 'success', 'alert-danger': message.type === 'error' }\">{{message.text}}</div>","import {Component,Input,ViewEncapsulation} from '@angular/core';\r\nimport {NgbDate, NgbCalendar, NgbDateParserFormatter} from '@ng-bootstrap/ng-bootstrap';\r\nimport {FormGroup} from '@angular/forms'\r\n\r\n@Component({\r\n  selector: 'ngbd-datepicker-range',\r\n  \r\n  templateUrl: './date.picker.html',\r\n  styleUrls: ['./common.css']\r\n \r\n})\r\nexport class DatePicker {\r\n    @Input() formgroup : FormGroup\r\n    hoveredDate: NgbDate | null = null;\r\n\r\n    fromDate: NgbDate | null;\r\n    toDate: NgbDate | null;\r\n  \r\n    constructor(private calendar: NgbCalendar, public formatter: NgbDateParserFormatter) {\r\n      this.fromDate = calendar.getToday();\r\n      this.toDate = calendar.getNext(calendar.getToday(), 'd', 10);\r\n    }\r\n  \r\n    onDateSelection(date: NgbDate) {\r\n      if (!this.fromDate && !this.toDate) {\r\n        this.fromDate = date;\r\n      } else if (this.fromDate && !this.toDate && date && date.after(this.fromDate)) {\r\n        this.toDate = date;\r\n      } else {\r\n        this.toDate = null;\r\n        this.fromDate = date;\r\n      }\r\n    }\r\n  \r\n    isHovered(date: NgbDate) {\r\n      return this.fromDate && !this.toDate && this.hoveredDate && date.after(this.fromDate) && date.before(this.hoveredDate);\r\n    }\r\n  \r\n    isInside(date: NgbDate) {\r\n      return this.toDate && date.after(this.fromDate) && date.before(this.toDate);\r\n    }\r\n  \r\n    isRange(date: NgbDate) {\r\n      return date.equals(this.fromDate) || (this.toDate && date.equals(this.toDate)) || this.isInside(date) || this.isHovered(date);\r\n    }\r\n  \r\n    validateInput(currentValue: NgbDate | null, input: string): NgbDate | null {\r\n      const parsed = this.formatter.parse(input);\r\n      return parsed && this.calendar.isValid(NgbDate.from(parsed)) ? NgbDate.from(parsed) : currentValue;\r\n    }\r\n}","<form class=\"form-inline\">\r\n  <div class=\"form-group hidden\">\r\n    <div class=\"input-group\">\r\n      <input name=\"datepicker\"\r\n             class=\"form-control\"\r\n             ngbDatepicker\r\n             #datepicker=\"ngbDatepicker\"\r\n             [autoClose]=\"'outside'\"\r\n             (dateSelect)=\"onDateSelection($event)\"\r\n             [displayMonths]=\"2\"\r\n             [dayTemplate]=\"t\"\r\n             outsideDays=\"hidden\"\r\n             [startDate]=\"fromDate!\">\r\n      <ng-template #t let-date let-focused=\"focused\">\r\n        <span class=\"custom-day\"\r\n              [class.focused]=\"focused\"\r\n              [class.range]=\"isRange(date)\"\r\n              [class.faded]=\"isHovered(date) || isInside(date)\"\r\n              (mouseenter)=\"hoveredDate = date\"\r\n              (mouseleave)=\"hoveredDate = null\">\r\n          {{ date.day }}\r\n        </span>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <div class=\"input-group\">\r\n      <input #dpFromDate\r\n             class=\"form-control\" placeholder=\"yyyy-mm-dd\"\r\n             name=\"dpFromDate\"\r\n             [value]=\"formatter.format(fromDate)\"\r\n             (input)=\"fromDate = validateInput(fromDate, dpFromDate.value)\">\r\n      <div class=\"input-group-append\">\r\n        <button class=\"btn btn-outline-secondary calendar\" (click)=\"datepicker.toggle()\" type=\"button\"></button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group ml-4\">\r\n    <div class=\"input-group\">\r\n      <input #dpToDate\r\n             class=\"form-control\" placeholder=\"yyyy-mm-dd\"\r\n             name=\"dpToDate\"\r\n             [value]=\"formatter.format(toDate)\"\r\n             (input)=\"toDate = validateInput(toDate, dpToDate.value)\">\r\n      <div class=\"input-group-append\">\r\n        <button class=\"btn btn-outline-secondary calendar\" (click)=\"datepicker.toggle()\" type=\"button\"></button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>\r\n","export * from './alert.component';\r\nexport * from './date.picker'","import { Component,OnInit} from '@angular/core';\nimport {ApiService} from '../_services/api.service';\n//import {UtilService} from '../shared/utilservice'\nimport {FinishedProductImpl,SemiFinishedImpl, RawMaterialImp} from '../_models'\nimport {FormBuilder,FormGroup,FormControl,Validators} from '@angular/forms'\n\n\n\n@Component({\n  selector: 'finishedItem',\n  templateUrl: './finished_material.html',\n  styleUrls: ['./common.css']\n})\nexport class FinishedMaterial implements OnInit {\n\n    uri = 'finishedproduct'\n    status = 'new'\n    disable = true\n    productlist :Array<string> =[]\n    size_map ={}\n    sizedropdown =[]\n    currentActiveRowid\n    action=\"add\"\n    flag =false\n    dataTosave:Array<FinishedProductImpl>=[]\n\n\n    constructor(private apiService:ApiService,private fb: FormBuilder){}\n    entryform  = this.fb.group(\n      {\n        challan : new FormControl(\"\",Validators.required),\n        recdate : new FormControl(\"\",Validators.required),\n        product : new FormControl(\"\",[Validators.required, Validators.min(1)]),\n        size:new FormControl(\"\", [Validators.required, Validators.min(1)]),\n        qty :new FormControl(\"\",Validators.required)\n    })\n\n    \n    ngOnInit(){\n      this.getChallanNo()\n      this.apiService.getFinishedlist().subscribe(\n        data=>{\n          this.productlist = data['product']\n          this.size_map = data['sizes']  \n          this.sizedropdown = this.size_map[this.productlist[0]]\n          this.entryform.controls['product'].setValue(this.productlist[0]);\n          this.entryform.controls['size'].setValue(this.sizedropdown[0]);\n        }\n      )\n    }\n    getChallanNo(){\n      this.apiService.getChallanNo('finishprod').subscribe(data=>{\n        console.log(data)\n        this.status = 'new'\n        this.entryform.controls['challan'].setValue(data['challan_no'])\n        this.disable = true\n        this.flag = false\n      })\n    }\n    \n    onChange(e){\n    console.log(e.target.value);\n    this.sizedropdown = this.size_map[e.target.value]\n    this.entryform.controls['size'].setValue(this.sizedropdown[0]);\n    //this.flag = false;\n    }\n    submit(){\n      console.log(\"submit\")\n      console.log(this.action)\n      if (this.action === 'add'){\n        this.add()\n      }\n      else{\n        this.update()\n      }\n    }\n    add(){\n      let row = new FinishedProductImpl()\n      row.challan = \"FINIS-\"+this.entryform.get('challan').value\n      row.size = this.entryform.get('size').value\n      row.product=this.entryform.get('product').value\n      row.stock= this.entryform.get('qty').value\n      row.recdate = this.entryform.get('recdate').value\n      row.status = 'new'\n      this.populate_weight_stock(row)\n      this.refresh()\n    }\n    update(){}\n    refresh(){\n      this.entryform.controls['product'].setValue(this.productlist[0]);\n      this.sizedropdown = this.size_map[this.productlist[0]]\n      this.entryform.controls['size'].setValue(this.sizedropdown[0]);\n      this.entryform.controls['qty'].setValue(null);\n      this.action=\"add\"\n    }\n    populate_weight_stock(obj:FinishedProductImpl){\n      let search={ \n          product: obj.product,\n          size : obj.size\n    }\n      this.apiService.getFinishedPrdCfg(search).subscribe(d=>{\n          console.log(d)\n          \n          let stock = d['stock']\n          let cosumed_semi_prod = d['consumed_semi_product']\n          let cosumed_raw = d['consumed_raw_material']\n          cosumed_semi_prod.forEach(element => {\n            let semi = new SemiFinishedImpl()\n            semi.product = element['product']\n            semi.size = element['size']\n            semi.qty = obj.stock\n            semi.recdate = obj.recdate\n            semi.challan = obj.challan\n            obj.semiProdList.push(semi)\n          });\n          \n          cosumed_raw.forEach(element=>{\n            let raw = new RawMaterialImp()\n            raw.material = element['material']\n            raw.size = element['size']\n            raw.recdate = obj.recdate\n            raw.challan = obj.challan\n            raw.weight = (obj.stock * element['weight_per_product'] /100).toFixed(3)\n            obj.rawMaterialList.push(raw)\n          })\n          this.dataTosave.push(obj)\n          console.log(this.dataTosave)\n          //this.refresh()\n      })\n  }\n  format_date(datejson){\n    return datejson['day']+\"-\"+datejson['month']+\"-\"+datejson['year'];\n  }\n  save(){\n    //console.log(this.dataTosave)\n    let data = {\n      status : this.status,\n      data : this.dataTosave\n    }\n    this.apiService.saveProducttxn(data).subscribe(e=>{\n      console.log(e)\n      this.flag = true\n      this.getChallanNo();\n      this.refresh();\n      this.dataTosave=[]\n      \n    })\n  }\n  editChallan(){\n    \n  }\n  searchChallan(prefix){\n    \n  }\n  edit(itemID){\n\n  }\n  delete(itenId){\n\n  }\n}\n\n \n\n","<div class=\"contact\">\n  <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"flag\">\n    Data saved successfully.\n  </div>\n\t<div class=\"row\">   \n\n\t\t<div class=\"col-md-12\">\n      <form [formGroup]=\"entryform\" class=\"contact-form\" (ngSubmit)=\"submit()\">  \n        <div class=\"form-row\">\n          <div class=\"form-group col-md-4\">\n            <div class=\"input-group\">\n              <div class=\"input-group-prepend\">\n                <span class=\"input-group-text\">FINIS-</span>\n              </div>\n              <input type=\"text\" class=\"form-control\" formControlName=\"challan\" [readonly]=\"disable\"  placeholder=\"challan\" required >\n            </div>\n          </div>\n          <div class=\"form-group col-md-4\">\n            <div class=\"input-group\">\n               <button class=\"btn btn-secondary\" type=\"button\"  [disabled]=\"disable\" (click)=\"searchChallan('Raw')\">\n                 <i class=\"fa fa-search\"></i>\n               </button>\n               <button class=\"btn btn-secondary\" type=\"button\"  [disabled]=\"!disable\" (click)=\"editChallan()\">\n                 Edit Challan\n               </button>\n             </div>\n           </div>\n        </div>\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-6\">\n            \n            <label for=\"inputEmail4\" class=\"col-sm-2 col-form-label\">Date</label>\n            <div class=\"input-group\">\n              <input class=\"form-control\" \n                  name=\"dp\" formControlName=\"recdate\" ngbDatepicker #d=\"ngbDatepicker\" value=\"recdate\">\n               <div class=\"input-group-append\">\n                <button class=\"btn btn-outline-secondary calendar\" (click)=\"d.toggle()\" type=\"button\"></button>\n              </div>\n            </div>\n        </div>\n          <div class=\"form-group col-md-6\">\n            <label for=\"material\" class=\"col-sm-2 col-form-label\">Product</label>\n            <select class=\"custom-select\" id=\"id\" (change)=\"onChange($event)\" formControlName=\"product\" >\n              <option [value]=\"m\" *ngFor=\"let m of productlist\">{{m}}</option>\n            </select>\n           </div>\n        \n        <div class=\"form-group col-md-6\">\n          <label for=\"size\" class=\"col-sm-2 col-form-label\">Size</label>\n          <select class=\"custom-select\" id=\"id\"  formControlName=\"size\">\n            <option [value]=\"m\" *ngFor=\"let m of sizedropdown\">{{m}}</option>\n          </select>\n         </div>\n         <div class=\"form-group col-md-6\">\n          <label for=\"weight\" class=\"col-sm-2 col-form-label\">Nos.</label>\n          <input class=\"form-control\" type=\"text\" formControlName=\"qty\"\n           required>\n         </div>\n         <div class=\"form-group\" >    \n                  <div class=\"col-sm-offset-4 col-sm-4\" >\n                      <button type=\"submit\" class=\"btn btn-default center-block \" [disabled]=\"!entryform.valid\">{{action}}</button>\n                  </div>\n        </div>\n        \n        </div>\n      </form> \n        \n        \n      <div class=\"row\" *ngIf=\"dataTosave?.length > 0\">\n        <table class=\"table table-striped table-bordered table-hover\" >\n          <thead class=\"thead-dark\">\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Challan No</th>\n              <th scope=\"col\">Date</th>\n              <th scope=\"col\">Product</th>\n              <th scope=\"col\">Size</th>\n              <th scope=\"col\">Qty</th>\n              <th scope=\"col\">Consumed SemiFinished</th>\n              <th scope=\"col\">Consumed Raw</th>           \n              <th scope=\"col\"></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let rawTxn of dataTosave;let indexOfelement=index;\">\n              <td scope=\"row\">{{indexOfelement+1}}</td>\n              <td>{{rawTxn.challan}}</td>\n              <td>{{format_date(rawTxn.recdate)}}</td>\n              <td>{{rawTxn.product}}</td>\n              <td>{{rawTxn.size}}</td>\n              <td>{{rawTxn.stock}}</td>\n              <td>\n                <div class=\"row\" *ngFor=\"let semi of rawTxn.semiProdList\">\n                <div class=\"col-sm\">\n                  {{semi.product}}\n                </div>\n                <div class=\"col-sm\">\n                 {{semi.size}}\n                </div>\n              </div>\n              </td>\n              <td>\n                <div class=\"row\" *ngFor=\"let raw of rawTxn.rawMaterialList\">\n                  <div class=\"col-sm\">\n                    {{raw.material}}\n                  </div>\n                  <div class=\"col-sm\">\n                   {{raw.size}}\n                  </div>\n                  <div class=\"col-sm\">\n                    {{raw.weight}}\n                   </div>\n                </div>\n              </td>              \n              <td>\n                  <button class=\"btn btn-success btn-sm rounded-0\" type=\"button\" (click)=\"edit(indexOfelement)\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Edit\"><i class=\"fa fa-edit\"></i></button>\n               \n                <button class=\"btn btn-danger btn-sm rounded-0\" type=\"button\" (click)=\"delete(indexOfelement)\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Delete\"><i class=\"fa fa-trash\"></i></button>\n            \n              </td>\n            </tr>\n          </tbody>\n        </table>\n       \n      </div>\n      <div class=\"form-group \" *ngIf=\"dataTosave?.length > 0\">    \n        <div class=\"col-sm-offset-4 col-sm-6\" style=\"left:50%;\">\n          <button type=\"submit\" class=\"btn btn-default\" (click)=\"save()\">save</button>\n        </div>\n      </div>\n        \n\n      </div>\n    </div>\n\t</div>\n\n","import { Component,OnInit, Input,Output ,EventEmitter} from '@angular/core';\nimport {ApiService} from '../_services/api.service';\n\n//import {UtilService} from '../shared/utilservice'\nimport { RawMaterialImp} from '../_models'\n\nimport {FormBuilder,FormGroup,FormControl,Validators} from '@angular/forms'\n\n\n\n@Component({\n  selector: 'rawitem',\n  templateUrl: './raw_material.html',\n  styleUrls: ['./common.css']\n})\nexport class RawMaterial implements OnInit {\n uri = 'finishedproduct'\n entryform  = this.fb.group(\n  {\n    challan : new FormControl(\"\",Validators.required),\n    recdate : new FormControl(\"\",Validators.required),\n    material: [\"\",  [Validators.required, Validators.min(1)]],\n    size:[\"\", Validators.required],\n    weight:[\"\",Validators.required]\n})\n\n \n materialist :Array<string> =[]\n size_map ={}\n sizedropdown =[]\n currentActiveRowid\n  \n dataTosave:Array<RawMaterialImp>=[]\n disable:boolean = false;\n flag = false\n status = 'new'\n constructor(private apiService:ApiService,private fb: FormBuilder){\n  \n }\n getChallanNo(){\n   this.apiService.getChallanNo('raw').subscribe(data=>{\n     console.log(data)\n     this.status = 'new'\n     this.entryform.controls['challan'].setValue(data['challan_no'])\n     this.disable = true\n   })\n }\n ngOnInit(){  \nthis.getChallanNo();\nthis.apiService.getRawAll().subscribe(data =>{\n    console.log(data);\n    this.materialist = data['material']\n    this.size_map = data['size_map']  \n    this.sizedropdown = this.size_map[this.materialist[0]]\n    this.entryform.controls['material'].setValue(this.materialist[0]);\n    this.entryform.controls['size'].setValue(this.sizedropdown[0]);\n});\n\n\n\n }\n\n  searchChallan(type){\n    console.log(type)\n    let challan = this.entryform.controls['challan'].value\n    console.log(challan)\n    if(challan){\n      this.apiService.searchChallanRaw(challan).subscribe(data=>{\n          console.log(data)\n          this.dataTosave = data\n          this.disable = true\n      })\n    }else{\n      console.log(\"empty challan id\")\n    }\n  }\n  action=\"add\"\n  \n\n  onChange(e){\n    console.log(e.target.value);\n    this.sizedropdown = this.size_map[e.target.value]\n    this.flag = false;\n  }\n  disbalef(){\n    this.disable = true;\n  }\n  enablef(){\n    this.disable =false;\n  }\n  submit(){\n     if (this.action === 'add'){\n       this.add()\n     }\n     else{\n       this.update()\n     }\n  }\n  add(){\n    console.log(\"add\")\n    //let row = JSON.stringify(this.entryform.value)\n    let row = new RawMaterialImp()\n    row.challan = \"RAW-\"+this.entryform.get('challan').value\n    let date = new Date();\n    console.log(this.entryform.get('recdate').value)\n    row.recdate = this.entryform.get('recdate').value\n    row.material = this.entryform.get('material').value\n    row.size = this.entryform.get('size').value\n    row.weight = this.entryform.get('weight').value\n    //row.txn = this.entryform.get('recdate').value\n    row.status = 'new'\n    this.dataTosave.push(row)\n    this.refresh()\n\n  }\n  format_date(datejson){\n    return datejson['day']+\"-\"+datejson['month']+\"-\"+datejson['year'];\n  }\n  refresh(){\n    this.entryform.controls['material'].setValue(this.materialist[0]);\n    this.entryform.controls['size'].setValue(this.sizedropdown[0]);\n    this.entryform.controls['weight'].setValue(null);\n    this.action=\"add\"\n  }\n  update(){\n    let row = this.dataTosave[this.currentActiveRowid]\n    row.recdate = this.entryform.get('recdate').value\n    row.material = this.entryform.get('material').value\n    row.size = this.entryform.get('size').value\n    row.weight = this.entryform.get('weight').value\n    this.dataTosave[this.currentActiveRowid]=row\n    this.refresh()\n  }\n  edit(indexOfelement){\n    this.action=\"update\"\n    console.log(\"edit\",indexOfelement)\n    this.currentActiveRowid = indexOfelement\n    let ele = this.dataTosave[indexOfelement]\n    console.log(\"ele\",ele)\n    this.entryform.setValue({\n      challan:ele.challan,\n      recdate:ele.recdate,\n      material:ele.material,\n      size : ele.size,\n      weight:ele.weight\n    })\n  }\n  delete(indexOfelement){\n      console.log(\"delete\",indexOfelement)\n      this.dataTosave.splice(indexOfelement, 1);\n  }\n  save(){\n    console.log(this.dataTosave)\n    let data = {\n      status : this.status,\n      data : this.dataTosave\n    }\n    this.apiService.saveRaw(data).subscribe(e=>{\n      console.log(e)\n      this.ngOnInit();\n      this.flag = true\n    })\n  }\n  editChallan(){\n    \n  }\n}","<div class=\"contact\">\n\n  <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"flag\">\n    Data saved successfully.\n  </div>\n\t<div class=\"row\">\n\t\t<div class=\"col-md-12\">\n\t\t\t<form [formGroup]=\"entryform\" class=\"contact-form\"(ngSubmit)=\"submit()\">  \n        <div class=\"form-row\">\n          \n          <div class=\"form-group col-md-4\">\n            <div class=\"input-group\">\n              <div class=\"input-group-prepend\">\n                <span class=\"input-group-text\">RAW-</span>\n              </div>\n              <input type=\"text\" class=\"form-control\" formControlName=\"challan\" [readonly]=\"disable\"  placeholder=\"challan\" required >\n            </div>\n           \n            \n          </div>\n          <div class=\"form-group col-md-4\">\n            <div class=\"input-group\">\n               <button class=\"btn btn-secondary\" type=\"button\"  [disabled]=\"disable\" (click)=\"searchChallan('Raw')\">\n                 <i class=\"fa fa-search\"></i>\n               </button>\n               <button class=\"btn btn-secondary\" type=\"button\"  [disabled]=\"!disable\" (click)=\"editChallan()\">\n                 Edit Challan\n               </button>\n             </div>\n           </div>\n        </div>\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-6\">\n            \n            <label for=\"inputEmail4\" class=\"col-sm-2 col-form-label\">Date</label>\n            <div class=\"input-group\">\n              <input class=\"form-control\" \n                  name=\"dp\" formControlName=\"recdate\" ngbDatepicker #d=\"ngbDatepicker\" value=\"recdate\">\n               <div class=\"input-group-append\">\n                <button class=\"btn btn-outline-secondary calendar\" (click)=\"d.toggle()\" type=\"button\"></button>\n              </div>\n            </div>\n        </div>\n          <div class=\"form-group col-md-6\">\n            <label for=\"material\" class=\"col-sm-2 col-form-label\">Material</label>\n            <select class=\"custom-select\" id=\"id\" (change)=\"onChange($event)\" formControlName=\"material\" >\n              <option [value]=\"m\" *ngFor=\"let m of materialist\">{{m}}</option>\n            </select>\n           </div>\n        \n        <div class=\"form-group col-md-6\">\n          <label for=\"size\" class=\"col-sm-2 col-form-label\">Size</label>\n          <select class=\"custom-select\" id=\"id\" formControlName=\"size\">\n            <option [value]=\"m\" *ngFor=\"let m of sizedropdown\">{{m}}</option>\n          </select>\n         </div>\n         <div class=\"form-group col-md-6\">\n          <label for=\"weight\" class=\"col-sm-2 col-form-label\">Weight</label>\n          <input class=\"form-control\" type=\"text\" formControlName=\"weight\"\n           required>\n         </div>\n         <div class=\"form-group\" >    \n\t\t\t\t  <div class=\"col-sm-offset-4 col-sm-4\" >\n\t\t\t\t  \t<button type=\"submit\" class=\"btn btn-default center-block \" [disabled]=\"!entryform.valid\">{{action}}</button>\n\t\t\t\t  </div>\n        </div>\n        \n        </div>\n      </form> \n        \n     \n  <div class=\"row\" *ngIf=\"dataTosave?.length > 0\">\n    <table class=\"table table-striped table-bordered table-hover\" >\n      <thead class=\"thead-dark\">\n        <tr>\n          <th scope=\"col\">#</th>\n          <th scope=\"col\">Challan No</th>\n          <th scope=\"col\">Date</th>\n          <th scope=\"col\">Material</th>\n          <th scope=\"col\">Size</th>\n          <th scope=\"col\">Weight(Kgs.)</th>\n          <th scope=\"col\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let rawTxn of dataTosave;let indexOfelement=index;\">\n          <td scope=\"row\">{{indexOfelement+1}}</td>\n          <td>{{rawTxn.challan}}</td>\n          <td>{{format_date(rawTxn.recdate)}}</td>\n          <td>{{rawTxn.material}}</td>\n          <td>{{rawTxn.size}}</td>\n          <td>{{rawTxn.weight}}</td>\n          <td>\n              <button class=\"btn btn-success btn-sm rounded-0\" type=\"button\" (click)=\"edit(indexOfelement)\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Edit\"><i class=\"fa fa-edit\"></i></button>\n           \n            <button class=\"btn btn-danger btn-sm rounded-0\" type=\"button\" (click)=\"delete(indexOfelement)\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Delete\"><i class=\"fa fa-trash\"></i></button>\n        \n          </td>\n        </tr>\n      </tbody>\n    </table>\n   \n  </div>\n  <div class=\"form-group \" *ngIf=\"dataTosave?.length > 0\">    \n    <div class=\"col-sm-offset-4 col-sm-4\" style=\"left:50%;\">\n      <button type=\"submit\" class=\"btn btn-default center-block \" (click)=\"save()\">save</button>\n    </div>\n  </div>\n      \n    </div>\n  </div>\n</div>\n\n","import { FormBuilder, FormGroup , FormControl,Validators} from '@angular/forms';\r\n\r\n    import { Component, OnInit } from '@angular/core';\r\n@Component({\r\n  selector: 'reports',\r\n  templateUrl: './reports.html',\r\n  styleUrls: ['./common.css']\r\n})\r\nexport class Reports implements OnInit{\r\n  searchParam\r\n  constructor(private fb: FormBuilder) {}\r\n  ngOnInit() {\r\n      \r\n   \r\n}\r\ngenerateReport(events){\r\n\r\n this.searchParam = events\r\n}\r\n\r\n}","<div class=\"container-fluid\">\r\n  <filter-comp (searchParam)='generateReport($event)'></filter-comp>\r\n  <app-print-page [searchParam]=\"searchParam\" *ngIf=\"searchParam\"></app-print-page>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div class=\"contact\">\r\n \r\n ","import { Component,OnInit} from '@angular/core';\nimport {ApiService} from '../_services/api.service';\nimport {FormBuilder,FormGroup,FormControl,Validators} from '@angular/forms'\nimport {FinishedProductImpl,Sales} from '../_models'\n\n\n\n@Component({\n  selector: 'sales',\n  templateUrl: './sales.html',\n  styleUrls: ['./common.css']\n})\nexport class SalesCompoent implements OnInit {\n   \n  status = 'new'\n  disable = true\n  productlist :Array<string> =[]\n  size_map ={}\n  sizedropdown =[]\n  currentActiveRowid\n  action=\"add\"\n  flag = false\n  dataTosave:Array<Sales>=[]\n\n\n  constructor(private apiService:ApiService,private fb: FormBuilder){}\n  entryform  = this.fb.group(\n    {\n      challan : new FormControl(\"\",Validators.required),\n      recdate : new FormControl(\"\",Validators.required),\n      product : new FormControl(\"\",[Validators.required, Validators.min(1)]),\n      size:new FormControl(\"\", [Validators.required, Validators.min(1)]),\n      qty :new FormControl(\"\",Validators.required),\n      vehicleNumber: new FormControl(\"\",Validators.required),\n      description: new FormControl(\"\",Validators.required)\n  })\n\n  ngOnInit(){\n    this.getChallanNo()\n    this.apiService.getFinishedlist().subscribe(\n      data=>{\n        this.productlist = data['product']\n        this.size_map = data['sizes']  \n        this.sizedropdown = this.size_map[this.productlist[0]]\n        this.entryform.controls['product'].setValue(this.productlist[0]);\n        this.entryform.controls['size'].setValue(this.sizedropdown[0]);\n      }\n    )\n  }\n  getChallanNo(){\n    this.apiService.getChallanNo('sales').subscribe(data=>{\n      console.log(data)\n      this.status = 'new'\n      this.entryform.controls['challan'].setValue(data['challan_no'])\n      this.disable = true\n    })\n  }\n  onChange(e){\n    console.log(e.target.value);\n    this.sizedropdown = this.size_map[e.target.value]\n    this.entryform.controls['size'].setValue(this.sizedropdown[0]);\n    //this.flag = false;\n    }\n\n     refresh(){\n      this.entryform.controls['product'].setValue(this.productlist[0]);\n      this.sizedropdown = this.size_map[this.productlist[0]]\n      this.entryform.controls['size'].setValue(this.sizedropdown[0]);\n      this.entryform.controls['qty'].setValue(null);\n      this.entryform.controls['vehicleNumber'].setValue(null);\n      this.entryform.controls['description'].setValue(null);\n      this.action=\"add\"\n     }\n     submit(){\n      console.log(\"submit\")\n      console.log(this.action)\n      if (this.action === 'add'){\n        this.add()\n      }\n      else{\n        this.update()\n      }\n      this.refresh()\n    }\n     add(){\n       let row =new Sales()\n       row.challan = \"SALE-\"+this.entryform.get('challan').value\n      row.size = this.entryform.get('size').value\n      row.product=this.entryform.get('product').value\n      row.stock= this.entryform.get('qty').value\n      row.recdate = this.entryform.get('recdate').value\n      row.vehicleNumber =  this.entryform.get('vehicleNumber').value\n      row.description = this.entryform.get('description').value\n      row.status = 'new'\n      this.dataTosave.push(row)\n\n     }\n     update(){}\n     format_date(datejson){\n      return datejson['day']+\"-\"+datejson['month']+\"-\"+datejson['year'];\n    }\n     save(){\n      let data = {\n        status : this.status,\n        data : this.dataTosave\n      }\n         this.apiService.saveSales(data).subscribe(e=>{\n            console.log(e)\n            this.refresh()\n            this.dataTosave=[]\n            this.getChallanNo()\n            this.flag = true\n          });\n     }\n     editChallan(){\n    \n    }\n    searchChallan(prefix){\n      \n    }\n    edit(itemID){\n  \n    }\n    delete(itenId){\n      \n    }\n}\n\n \n\n","<div class=\"contact\">\n    <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"flag\">\n        Data saved successfully.\n      </div>\n\t<div class=\"row\">\n\t\t<div class=\"col-md-12\">\n     \n      <form [formGroup]=\"entryform\" class=\"contact-form\"(ngSubmit)=\"submit()\">  \n        <div class=\"form-row\">\n          <div class=\"form-group col-md-4\">\n            <div class=\"input-group\">\n              <div class=\"input-group-prepend\">\n                <span class=\"input-group-text\">SAL-</span>\n              </div>\n              <input type=\"text\" class=\"form-control\" formControlName=\"challan\" [readonly]=\"disable\"  placeholder=\"challan\" required >\n            </div>\n          </div>\n          <div class=\"form-group col-md-4\">\n            <div class=\"input-group\">\n               <button class=\"btn btn-secondary\" type=\"button\"  [disabled]=\"disable\" (click)=\"searchChallan('Raw')\">\n                 <i class=\"fa fa-search\"></i>\n               </button>\n               <button class=\"btn btn-secondary\" type=\"button\"  [disabled]=\"!disable\" (click)=\"editChallan()\">\n                 Edit Challan\n               </button>\n             </div>\n           </div>\n        </div>\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-4\">\n            \n            <label for=\"inputEmail4\" class=\"col-sm-2 col-form-label\">Date</label>\n            <div class=\"input-group\">\n              <input class=\"form-control\" \n                  name=\"dp\" formControlName=\"recdate\" ngbDatepicker #d=\"ngbDatepicker\" value=\"recdate\">\n               <div class=\"input-group-append\">\n                <button class=\"btn btn-outline-secondary calendar\" (click)=\"d.toggle()\" type=\"button\"></button>\n              </div>\n            </div>\n        </div>\n          <div class=\"form-group col-md-4\">\n            <label for=\"material\" class=\"col-sm-2 col-form-label\">Product</label>\n            <select class=\"custom-select\" id=\"id\" (change)=\"onChange($event)\" formControlName=\"product\" >\n              <option [value]=\"m\" *ngFor=\"let m of productlist\">{{m}}</option>\n            </select>\n           </div>\n        \n        <div class=\"form-group col-md-4\">\n          <label for=\"size\" class=\"col-sm-2 col-form-label\">Size</label>\n          <select class=\"custom-select\" id=\"id\"  formControlName=\"size\">\n            <option [value]=\"m\" *ngFor=\"let m of sizedropdown\">{{m}}</option>\n          </select>\n         </div>\n        </div>\n        <div class=\"form-row\">\n         <div class=\"form-group col-md-4\">\n          <label for=\"qty\" class=\"col-sm-2 col-form-label\">Quantity</label>\n          <input class=\"form-control\" type=\"text\" formControlName=\"qty\"\n           required>\n         </div>\n         <div class=\"form-group col-md-4\">\n          <label for=\"vehicleNumber\" class=\"col-sm-3 col-form-label\">Vehicle#</label>\n          <input class=\"form-control\" type=\"text\" formControlName=\"vehicleNumber\"\n           required>\n         </div>\n         <div class=\"form-group col-md-4\">\n          <label for=\"description\" class=\"col-sm-2 col-form-label\">Description</label>\n          <input class=\"form-control\" type=\"text\" formControlName=\"description\"\n           required>\n         </div>\n        \n        \n        </div>\n        <div class=\"form-group\" >    \n          <div class=\"col-sm-offset-4 col-sm-6\" style=\"left:50%;\">\n            <button type=\"submit\" class=\"btn btn-default\" [disabled]=\"!entryform.valid\">{{action}}</button>\n          </div>\n        </div>\n      </form> \n      <div class=\"row\" *ngIf=\"dataTosave?.length > 0\">\n        <table class=\"table table-striped table-bordered table-hover\" >\n          <thead class=\"thead-dark\">\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Challan No</th>\n              <th scope=\"col\">Date</th>\n              <th scope=\"col\">Product</th>\n              <th scope=\"col\">Size</th>\n              <th scope=\"col\">Qty</th>\n              <th scope=\"col\">Vehicle Number</th>\n              <th scope=\"col\">Description</th>           \n              <th scope=\"col\"></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let rawTxn of dataTosave;let indexOfelement=index;\">\n              <td scope=\"row\">{{indexOfelement+1}}</td>\n              <td>{{rawTxn.challan}}</td>\n              <td>{{format_date(rawTxn.recdate)}}</td>\n              <td>{{rawTxn.product}}</td>\n              <td>{{rawTxn.size}}</td>\n              <td>{{rawTxn.stock}}</td>\n              <td>{{rawTxn.vehicleNumber}}</td>\n              <td>{{rawTxn.description}}</td>              \n              <td>\n                  <button class=\"btn btn-success btn-sm rounded-0\" type=\"button\" (click)=\"edit(indexOfelement)\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Edit\"><i class=\"fa fa-edit\"></i></button>\n               \n                <button class=\"btn btn-danger btn-sm rounded-0\" type=\"button\" (click)=\"delete(indexOfelement)\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Delete\"><i class=\"fa fa-trash\"></i></button>\n            \n              </td>\n            </tr>\n          </tbody>\n        </table>\n       \n      </div>\n      <div class=\"form-group \" *ngIf=\"dataTosave?.length > 0\">    \n        <div class=\"col-sm-offset-4 col-sm-6\" style=\"left:50%;\">\n          <button type=\"submit\" class=\"btn btn-default\" (click)=\"save()\">save</button>\n        </div>\n      </div>\n\n    </div>\n        \n\t</div>\n</div>\n","import { Component,OnInit, Input,Output ,EventEmitter} from '@angular/core';\r\nimport {ApiService} from '../_services/api.service';\r\n\r\n//import {UtilService} from '../shared/utilservice'\r\nimport { SemiFinishedImpl} from '../_models'\r\n\r\nimport {FormBuilder,FormGroup,FormControl, Validators} from '@angular/forms'\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'semifinished',\r\n  templateUrl: './semi_finished.html',\r\n  styleUrls: ['./common.css']\r\n})\r\nexport class SemiFinishedProduct implements OnInit {\r\n uri = 'semiFinishedProduct'\r\n entryform  = this.fb.group(\r\n  {\r\n    challan : new FormControl(\"\",Validators.required),\r\n    recdate : new FormControl(\"\",Validators.required),\r\n    product : new FormControl(\"\",[Validators.required, Validators.min(1)]),\r\n    \r\n    size:new FormControl(\"\", [Validators.required, Validators.min(1)]),\r\n    \r\n    qty :new FormControl(\"\",Validators.required)\r\n})\r\n\r\n \r\nproductlist :Array<string> =[]\r\n size_map ={}\r\n sizedropdown =[]\r\n currentActiveRowid\r\n  \r\n dataTosave:Array<SemiFinishedImpl>=[]\r\n disable:boolean = false;\r\n flag = false\r\n status = 'new'\r\n constructor(private apiService:ApiService,private fb: FormBuilder){\r\n  \r\n }\r\n getChallanNo(){\r\n   this.apiService.getChallanNo('semifinished').subscribe(data=>{\r\n     console.log(data)\r\n     this.status = 'new'\r\n     this.entryform.controls['challan'].setValue(data['challan_no'])\r\n     this.disable = true\r\n   })\r\n }\r\n ngOnInit(){  \r\nthis.getChallanNo();\r\nthis.apiService.getSemiFinishedAll().subscribe(data =>{\r\n    console.log(data);    \r\n    this.productlist = data['product']\r\n    this.size_map = data['sizes']  \r\n    this.sizedropdown = this.size_map[this.productlist[0]]\r\n    this.entryform.controls['product'].setValue(this.productlist[0]);\r\n    this.entryform.controls['size'].setValue(this.sizedropdown[0]);\r\n    //this.onSizeChange(0);\r\n});\r\n\r\n\r\n\r\n }\r\n\r\n  searchChallan(type){\r\n    console.log(type)\r\n    let challan = this.entryform.controls['challan'].value\r\n    console.log(challan)\r\n    if(challan){\r\n      this.apiService.searchChallanRaw(challan).subscribe(data=>{\r\n          console.log(data)\r\n         /// this.dataTosave = data\r\n          this.disable = true\r\n      })\r\n    }else{\r\n      console.log(\"empty challan id\")\r\n    }\r\n  }\r\n  action=\"add\"\r\n  \r\n\r\n  onChange(e){\r\n    console.log(e.target.value);\r\n    this.sizedropdown = this.size_map[e.target.value]\r\n    this.entryform.controls['size'].setValue(this.sizedropdown[0]);\r\n    this.flag = false;\r\n  }\r\n  onSizeChange(obj:SemiFinishedImpl){\r\n    let search={ \r\n        product: obj.product,\r\n        size : obj.product_size\r\n  }\r\n    this.apiService.getRawCfg(search).subscribe(d=>{\r\n        console.log(d)\r\n        obj.material = d['raw']\r\n        obj.size = d['raw_size']\r\n        obj.weight = (obj.qty * d['weight_per_product']).toFixed(3)       \r\n        obj.wastage = (((obj.qty * d['weight_per_product']) * d['wastage_in_percetage'])/100).toFixed(3)\r\n        this.dataTosave.push(obj)\r\n        this.refresh()\r\n    })\r\n}\r\n  disbalef(){\r\n    this.disable = true;\r\n  }\r\n  enablef(){\r\n    this.disable =false;\r\n  }\r\n  submit(){\r\n     if (this.action === 'add'){\r\n       this.add()\r\n     }\r\n     else{\r\n       this.update()\r\n     }\r\n  }\r\n  add(){\r\n    console.log(\"add\")\r\n    //let row = JSON.stringify(this.entryform.value)\r\n    let row = new SemiFinishedImpl()\r\n    row.challan = \"SEMI-\"+this.entryform.get('challan').value\r\n    let date = new Date();\r\n    console.log(this.entryform.get('recdate').value)\r\n    row.recdate = this.entryform.get('recdate').value\r\n    row.product = this.entryform.get('product').value\r\n    row.product_size = this.entryform.get('size').value\r\n    row.qty = this.entryform.get('qty').value\r\n    row.status = 'new'\r\n    this.onSizeChange(row)\r\n  \r\n}\r\n  format_date(datejson){\r\n    return datejson['day']+\"-\"+datejson['month']+\"-\"+datejson['year'];\r\n  }\r\n  refresh(){\r\n    this.entryform.controls['product'].setValue(this.productlist[0]);\r\n    this.entryform.controls['size'].setValue(this.sizedropdown[0]);\r\n    this.entryform.controls['qty'].setValue(null);\r\n    this.action=\"add\"\r\n  }\r\n  update(){\r\n    let row = this.dataTosave[this.currentActiveRowid]\r\n    row.recdate = this.entryform.get('recdate').value\r\n    row.product = this.entryform.get('product').value\r\n    row.product_size = this.entryform.get('size').value\r\n    row.weight = this.entryform.get('qty').value\r\n    this.dataTosave[this.currentActiveRowid]=row\r\n    this.refresh()\r\n  }\r\n  edit(indexOfelement){\r\n    this.action=\"update\"\r\n    console.log(\"edit\",indexOfelement)\r\n    this.currentActiveRowid = indexOfelement\r\n    let ele = this.dataTosave[indexOfelement]\r\n    console.log(\"ele\",ele)\r\n    this.entryform.setValue({\r\n      challan:ele.challan,\r\n      recdate:ele.recdate,\r\n      material:ele.product,\r\n      size : ele.product_size,\r\n      weight:ele.qty\r\n    })\r\n  }\r\n  delete(indexOfelement){\r\n      console.log(\"delete\",indexOfelement)\r\n      this.dataTosave.splice(indexOfelement, 1);\r\n  }\r\n  save(){\r\n    console.log(this.dataTosave)\r\n    let data = {\r\n      status : this.status,\r\n      data : this.dataTosave\r\n    }\r\n    this.apiService.saveSemiProduct(data).subscribe(e=>{\r\n      console.log(e)\r\n      this.ngOnInit();\r\n      this.flag = true\r\n    })\r\n  }\r\n  editChallan(){\r\n    \r\n  }\r\n \r\n}","<div class=\"contact\">\r\n    <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"flag\">\r\n      Data saved successfully.\r\n    </div>\r\n      <div class=\"row\">\r\n          <div class=\"col-md-12\">\r\n              <form [formGroup]=\"entryform\" class=\"contact-form\" (ngSubmit)=\"submit()\">  \r\n          <div class=\"form-row\">\r\n            <div class=\"form-group col-md-4\">\r\n              <div class=\"input-group\">\r\n                <div class=\"input-group-prepend\">\r\n                  <span class=\"input-group-text\">SEMI-</span>\r\n                </div>\r\n                <input type=\"text\" class=\"form-control\" formControlName=\"challan\" [readonly]=\"disable\"  placeholder=\"challan\" required >\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group col-md-4\">\r\n              <div class=\"input-group\">\r\n                 <button class=\"btn btn-secondary\" type=\"button\"  [disabled]=\"disable\" (click)=\"searchChallan('Raw')\">\r\n                   <i class=\"fa fa-search\"></i>\r\n                 </button>\r\n                 <button class=\"btn btn-secondary\" type=\"button\"  [disabled]=\"!disable\" (click)=\"editChallan()\">\r\n                   Edit Challan\r\n                 </button>\r\n               </div>\r\n             </div>\r\n          </div>\r\n          <div class=\"form-row\">\r\n            <div class=\"form-group col-md-6\">\r\n              \r\n              <label for=\"inputEmail4\" class=\"col-sm-2 col-form-label\">Date</label>\r\n              <div class=\"input-group\">\r\n                <input class=\"form-control\" \r\n                    name=\"dp\" formControlName=\"recdate\" ngbDatepicker #d=\"ngbDatepicker\" value=\"recdate\">\r\n                 <div class=\"input-group-append\">\r\n                  <button class=\"btn btn-outline-secondary calendar\" (click)=\"d.toggle()\" type=\"button\"></button>\r\n                </div>\r\n              </div>\r\n          </div>\r\n            <div class=\"form-group col-md-6\">\r\n              <label for=\"material\" class=\"col-sm-2 col-form-label\">Product</label>\r\n              <select class=\"custom-select\" id=\"id\" (change)=\"onChange($event)\" formControlName=\"product\" >\r\n                <option [value]=\"m\" *ngFor=\"let m of productlist\">{{m}}</option>\r\n              </select>\r\n             </div>\r\n          \r\n          <div class=\"form-group col-md-6\">\r\n            <label for=\"size\" class=\"col-sm-2 col-form-label\">Size</label>\r\n            <select class=\"custom-select\" id=\"id\"  formControlName=\"size\">\r\n              <option [value]=\"m\" *ngFor=\"let m of sizedropdown\">{{m}}</option>\r\n            </select>\r\n           </div>\r\n           <div class=\"form-group col-md-6\">\r\n            <label for=\"weight\" class=\"col-sm-2 col-form-label\">Nos.</label>\r\n            <input class=\"form-control\" type=\"text\" formControlName=\"qty\"\r\n             required>\r\n           </div>\r\n           <div class=\"form-group\" >    \r\n                    <div class=\"col-sm-offset-4 col-sm-4\" >\r\n                        <button type=\"submit\" class=\"btn btn-default center-block \" [disabled]=\"!entryform.valid\">{{action}}</button>\r\n                    </div>\r\n          </div>\r\n          \r\n          </div>\r\n        </form> \r\n          \r\n       \r\n    <div class=\"row\" *ngIf=\"dataTosave?.length > 0\">\r\n      <table class=\"table table-striped table-bordered table-hover\" >\r\n        <thead class=\"thead-dark\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Challan No</th>\r\n            <th scope=\"col\">Date</th>\r\n            <th scope=\"col\">Product</th>\r\n            <th scope=\"col\">Size</th>\r\n            <th scope=\"col\">Qty</th>\r\n            <th scope=\"col\">Raw Material</th>\r\n            <th scope=\"col\">Size Consumed</th>\r\n            <th scope=\"col\">Weight Consumed</th>\r\n            <th scope=\"col\">Wastage</th>            \r\n            <th scope=\"col\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let rawTxn of dataTosave;let indexOfelement=index;\">\r\n            <td scope=\"row\">{{indexOfelement+1}}</td>\r\n            <td>{{rawTxn.challan}}</td>\r\n            <td>{{format_date(rawTxn.recdate)}}</td>\r\n            <td>{{rawTxn.product}}</td>\r\n            <td>{{rawTxn.product_size}}</td>\r\n            <td>{{rawTxn.qty}}</td>\r\n            <td>{{rawTxn.material}}</td>\r\n            <td>{{rawTxn.size}}</td>\r\n            <td>{{rawTxn.weight}}</td>\r\n            <td>{{rawTxn.wastage}}</td>\r\n            \r\n            <td>\r\n                <button class=\"btn btn-success btn-sm rounded-0\" type=\"button\" (click)=\"edit(indexOfelement)\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Edit\"><i class=\"fa fa-edit\"></i></button>\r\n             \r\n              <button class=\"btn btn-danger btn-sm rounded-0\" type=\"button\" (click)=\"delete(indexOfelement)\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Delete\"><i class=\"fa fa-trash\"></i></button>\r\n          \r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n     \r\n    </div>\r\n    <div class=\"form-group \" *ngIf=\"dataTosave?.length > 0\">    \r\n      <div class=\"col-sm-offset-4 col-sm-4\" style=\"left:50%;\">\r\n        <button type=\"submit\" class=\"btn btn-default center-block \" (click)=\"save()\">save</button>\r\n      </div>\r\n    </div>\r\n        \r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  ","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport {AuthenticationService} from '../_services/authentication.service';\nimport { Observable } from 'rxjs';\nimport { take, map } from 'rxjs/operators';\n@Injectable({\n    providedIn: 'root'\n  })\nexport class AuthGuard implements CanActivate {\n\n    constructor(private acct : AuthenticationService,private router: Router) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) : Observable<boolean>{\n        console.log(\"can activate\")\n        return this.acct.isLoggedIn.pipe(take(1), map((loginStatus : boolean) => \n        {\n              const destination: string  = state.url;\n              const productId = route.params.id; \n\n            console.log(loginStatus)\n            // To check if user is not logged in\n            if(!loginStatus) \n            {\n                this.router.navigate(['/login'], {queryParams: {returnUrl : state.url}});\n\n                return false;\n            }\n            return true;\n\n            // if the user is already logged in\n                 \n          \n        }));\n\n    }\n}","export * from './auth.guard';","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../_services';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.authenticationService.logout();\n                location.reload(true);\n            }\n            \n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\n\n@Injectable()\nexport class FakeBackendInterceptor implements HttpInterceptor {\n\n    constructor() { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // array in local storage for registered users\n        let users: any[] = JSON.parse(localStorage.getItem('users')) || [];\n\n        // wrap in delayed observable to simulate server api call\n        return of(null).pipe(mergeMap(() => {\n\n            // authenticate\n            if (request.url.endsWith('/users/authenticate') && request.method === 'POST') {\n                // find if any user matches login credentials\n                let filteredUsers = users.filter(user => {\n                    return user.username === request.body.username && user.password === request.body.password;\n                });\n\n                if (filteredUsers.length) {\n                    // if login details are valid return 200 OK with user details and fake jwt token\n                    let user = filteredUsers[0];\n                    let body = {\n                        id: user.id,\n                        username: user.username,\n                        firstName: user.firstName,\n                        lastName: user.lastName,\n                        token: 'fake-jwt-token'\n                    };\n\n                    return of(new HttpResponse({ status: 200, body: body }));\n                } else {\n                    // else return 400 bad request\n                    return throwError({ error: { message: 'Username or password is incorrect' } });\n                }\n            }\n\n            // get users\n            if (request.url.endsWith('/users') && request.method === 'GET') {\n                // check for fake auth token in header and return users if valid, this security is implemented server side in a real application\n                if (request.headers.get('Authorization') === 'Bearer fake-jwt-token') {\n                    return of(new HttpResponse({ status: 200, body: users }));\n                } else {\n                    // return 401 not authorised if token is null or invalid\n                    return throwError({ status: 401, error: { message: 'Unauthorised' } });\n                }\n            }\n\n            // get user by id\n            if (request.url.match(/\\/users\\/\\d+$/) && request.method === 'GET') {\n                // check for fake auth token in header and return user if valid, this security is implemented server side in a real application\n                if (request.headers.get('Authorization') === 'Bearer fake-jwt-token') {\n                    // find user by id in users array\n                    let urlParts = request.url.split('/');\n                    let id = parseInt(urlParts[urlParts.length - 1]);\n                    let matchedUsers = users.filter(user => { return user.id === id; });\n                    let user = matchedUsers.length ? matchedUsers[0] : null;\n\n                    return of(new HttpResponse({ status: 200, body: user }));\n                } else {\n                    // return 401 not authorised if token is null or invalid\n                    return throwError({ status: 401, error: { message: 'Unauthorised' } });\n                }\n            }\n\n            // register user\n            if (request.url.endsWith('/users/register') && request.method === 'POST') {\n                // get new user object from post body\n                let newUser = request.body;\n\n                // validation\n                let duplicateUser = users.filter(user => { return user.username === newUser.username; }).length;\n                if (duplicateUser) {\n                    return throwError({ error: { message: 'Username \"' + newUser.username + '\" is already taken' } });\n                }\n\n                // save new user\n                newUser.id = users.length + 1;\n                users.push(newUser);\n                localStorage.setItem('users', JSON.stringify(users));\n\n                // respond 200 OK\n                return of(new HttpResponse({ status: 200 }));\n            }\n\n            // delete user\n            if (request.url.match(/\\/users\\/\\d+$/) && request.method === 'DELETE') {\n                // check for fake auth token in header and return user if valid, this security is implemented server side in a real application\n                if (request.headers.get('Authorization') === 'Bearer fake-jwt-token') {\n                    // find user by id in users array\n                    let urlParts = request.url.split('/');\n                    let id = parseInt(urlParts[urlParts.length - 1]);\n                    for (let i = 0; i < users.length; i++) {\n                        let user = users[i];\n                        if (user.id === id) {\n                            // delete user\n                            users.splice(i, 1);\n                            localStorage.setItem('users', JSON.stringify(users));\n                            break;\n                        }\n                    }\n\n                    // respond 200 OK\n                    return of(new HttpResponse({ status: 200 }));\n                } else {\n                    // return 401 not authorised if token is null or invalid\n                    return throwError({ status: 401, error: { message: 'Unauthorised' } });\n                }\n            }\n\n            // pass through any requests not handled above\n            return next.handle(request);\n            \n        }))\n\n        // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\n        .pipe(materialize())\n        .pipe(delay(500))\n        .pipe(dematerialize());\n    }\n}\n\nexport let fakeBackendProvider = {\n    // use fake backend in place of Http service for backend-less development\n    provide: HTTP_INTERCEPTORS,\n    useClass: FakeBackendInterceptor,\n    multi: true\n};","export * from './error.interceptor';\nexport * from './jwt.interceptor';\nexport * from './fake-backend';","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add authorization header with jwt token if available\n        console.log(\"JwtInterceptor\",JwtInterceptor)\n        let token = localStorage.getItem('token');\n        if (token) {\n            request = request.clone({\n                setHeaders: { \n                    Authorization: `Bearer ${token}`\n                }\n            \n            });\n            console.log(request)\n        }\n\n        return next.handle(request);\n    }\n}","export * from './user';","export class User {\n    id: number;\n    username: string;\n    password: string;\n    firstName: string;\n    lastName: string;\n}\n\nexport class RawMaterialImp {\n    industry : string;\n    challan : string;\n    txn:string;\n    recdate : string;\n    weight : string;\n    material : string;\n    size: number;   \n    status: string;\n}\n\nexport class SemiFinishedImpl{\n    industry: string;\n    challan: string;\n    txn:string;\n    recdate:string;\n    product:string;\n    product_size:string;\n    qty : number;\n    material : string;\n    size : string;\n    status: string;\n    wastage : string;\n    weight:string;\n}\n\n\nexport class FinishedProductImpl {\n    recdate : string;\n    challan: string;\n    product : string;\n    size: string;\n    stock : number;\n    industry: string;\n    txn:string;\n    status: string;\n    semiProdList : Array<SemiFinishedImpl>=[]\n    rawMaterialList : Array<RawMaterialImp>=[];    \n}\nexport class Sales{\n    recdate : string;\n    challan: string;\n    product : string;\n    size: string;\n    stock : number;\n    txn:string;\n    status: string;\n    vehicleNumber :string;\n    description:string;\n    \n}","import { Injectable } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class AlertService {\n    private subject = new Subject<any>();\n    private keepAfterNavigationChange = false;\n\n    constructor(private router: Router) {\n        // clear alert message on route change\n        router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                if (this.keepAfterNavigationChange) {\n                    // only keep for a single location change\n                    this.keepAfterNavigationChange = false;\n                } else {\n                    // clear alert\n                    this.subject.next();\n                }\n            }\n        });\n    }\n\n    success(message: string, keepAfterNavigationChange = false) {\n        this.keepAfterNavigationChange = keepAfterNavigationChange;\n        this.subject.next({ type: 'success', text: message });\n    }\n\n    error(message: string, keepAfterNavigationChange = false) {\n        this.keepAfterNavigationChange = keepAfterNavigationChange;\n        this.subject.next({ type: 'error', text: message });\n    }\n\n    getMessage(): Observable<any> {\n        return this.subject.asObservable();\n    }\n}","import { Injectable } from '@angular/core';\n\nimport { environment } from '../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\n\nimport { RawMaterialImp} from '../_models';\n\ninterface Columns{\n\tdata: string, \n\ttitle: string, \n\tvisible: boolean\n  }\n@Injectable()\n\nexport class ApiService {\n\n\n    constructor(private http: HttpClient) { }\n\t\n\tprivate _handle_error(error: any) {\n\t\tif (error.status == 401 || error.status == 302 || error.status == 10 || error.status == 403) {\n\t\t\twindow.localStorage.clear();\n\t\t\twindow.sessionStorage.clear();\n\t\t\tif ('_body' in error) {\n\t\t\t\tvar link = error._body;\n\t\t\t\tif (link.indexOf('http') !== -1) {\n\t\t\t\t\tlocation.href = link;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation.reload();\n\t\t\t}\n\t\t\tlocation.reload();\n\t\t};\n\t\tlet message: string = (error.message) ? error.message : error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n\t\treturn Observable.throw(message);\n\t}\n\n\tgetChallanNo(action){\n\t\tlet baseruri = environment.origin + environment.api;\n        return this.http.get(`${baseruri}/challan/${action}`);\n\t\n\t}\t\n    getRawAll() {\n\t\tlet baseruri = environment.origin + environment.api;\n        return this.http.get(`${baseruri}/rawproduct`);\n\t}\n\tgetSemiFinishedAll(){\n\t\tlet baseruri = environment.origin + environment.api;\n        return this.http.get(`${baseruri}/semifinishedoduct`);\n\t}\n\tgetRawCfg(searchparms){\n\t\tlet baseruri = environment.origin + environment.api;\n\t\treturn this.http.post(`${baseruri}/mappedraw`, searchparms);\n\t}\n\t\n\tsaveRaw(data){\n\t\tlet baseruri = environment.origin + environment.api;\n\t\treturn this.http.post(`${baseruri}/rawproduct`, data);\n\t}\n\tsaveSemiProduct(data){\n\t\tlet baseruri = environment.origin + environment.api;\n\t\treturn this.http.post(`${baseruri}/semifinishedoduct`,data);\n\t}\n\tgetFinishedlist() {\n\t\tlet baseruri = environment.origin + environment.api;\n        return this.http.get(`${baseruri}/finishedproduct`);\n\t}\n\tgetFinishedPrdCfg(search){\n\t\tlet baseruri = environment.origin + environment.api;\n        return this.http.post(`${baseruri}/finishedcfg`,search);\n\t}\n\tsaveProducttxn(data){\n\t\tlet baseruri = environment.origin + environment.api;\n\t\treturn this.http.post(`${baseruri}/finishedproduct`, data);\n\t}\n\t/*\n\tget_stock_in_hand(url){\n\t\tconsole.log(\"uri\",url)\n\t\tlet baseruri = environment.origin + environment.api;\n\t\treturn this.http.get<Map<String,StockInHand[]>>(`${baseruri}/${url}`);\n\t}*/\n\tsaveSales(data){\n\t\tlet baseruri = environment.origin + environment.api;\n\t\treturn this.http.post(`${baseruri}/isales`, data);\n\t}\n\tsearchChallanRaw(id){\n\t\tlet baseruri = environment.origin + environment.api;\n\t\tconst type ='Raw'\n\t\treturn this.http.get<RawMaterialImp[]>(`${baseruri}/searchChallan/${type}/${id}`);\n\t}\n\tsearchChallanFin(id){\n\t\tlet baseruri = environment.origin + environment.api;\n\t\tconst type ='Fin'\n\t\treturn this.http.get(`${baseruri}/searchChallan/${type}/${id}`);\n\t}\n\tsearchChallanSales(id){\n\t\tlet baseruri = environment.origin + environment.api;\n\t\tconst type ='Sal'\n\t\treturn this.http.get(`${baseruri}/searchChallan/${type}/${id}`);\n\t}\n\tsearchReportOptions(){\n\t\tlet baseruri = environment.origin + environment.api;\n\t\treturn this.http.get(`${baseruri}/reportoption`);\n\t}\n\tgetSIH(id){\n\t\tlet baseruri = environment.origin + environment.api;\n\t\treturn this.http.get(`${baseruri}/stockinhand/${id}`);\n\t}\n\tgetTransactionData(id,searchParams){\n\t\tconsole.log(\"id \",id)\n\t\tconsole.log(\"searchParams \",searchParams)\n\t\tlet baseruri = environment.origin + environment.api;\n\t\treturn this.http.post(`${baseruri}/transactions/${id}`,searchParams);\n\t}\n\tgetOptions(id,lookingForid){\n\t\tlet baseruri = environment.origin + environment.api;\n\t\treturn this.http.get<Array<Columns>>(`${baseruri}/dataoptions/${id}/${lookingForid}`);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\n\n\nimport { Observable, Subject, BehaviorSubject } from 'rxjs';\n\nimport { Router } from '@angular/router';\nimport * as jwt_decode from \"jwt-decode\";\n//import { decode } from 'punycode';\n\n@Injectable({\n    providedIn: 'root'\n  })  \nexport class AuthenticationService {\n    constructor(private http: HttpClient, private router : Router) { }\n  \n    \n\n    private loginStatus = new BehaviorSubject<boolean>(this.checkLoginStatus());\n    //private UserName    = new BehaviorSubject<string>(localStorage.getItem('username'));\n    //private UserRole    = new BehaviorSubject<string>(localStorage.getItem('userRole'));\n\n    get isLoggedIn() {\n        return this.loginStatus.asObservable();\n    }\n\n\n\n    login(username: string, password: string) {\n        //let baseuri = environment.origin+environment.api\n        //let baseuri = \"http://localhost:4000\"\n        console.log(\"login\")\n        let baseuri = environment.origin + environment.api;\n        console.log(baseuri)\n        return this.http.post<any>(`${baseuri}/users/authenticate`, { username: username, password: password })\n            .pipe(map(result => {\n                // login successful if there's a jwt token in the response\n               console.log(\"result \",result);\n               if(result && result.token) \n                {\n                      // store user details and jwt token in local storage to keep user logged in between page refreshes\n\n                    this.loginStatus.next(true);\n                    localStorage.setItem('loginStatus', '1');\n                    localStorage.setItem('token', result.token);\n                    localStorage.setItem('username', result.username);\n                    localStorage.setItem('expiration', result.expiration);\n                    localStorage.setItem('userRole', result.userRole);\n                    //this.UserName.next(localStorage.getItem('username'));\n                    //this.UserRole.next(localStorage.getItem('userRole'));\n                }\n\n                 return result;\n            }));\n    }\n\n\n    checkLoginStatus() : boolean \n    {\n      \n        var loginCookie = localStorage.getItem(\"loginStatus\");\n\n        if(loginCookie == \"1\") \n        {\n            if(localStorage.getItem('token') === null || localStorage.getItem('token') === undefined) \n            {\n                return false;\n            }\n\n             // Get and Decode the Token\n             const token = localStorage.getItem('token');\n             const decoded = jwt_decode(token);\n            // Check if the cookie is valid\n            console.log(\"decoded \",decoded)\n            if(decoded.exp === undefined) \n            {\n                return true;\n            }\n\n            // Get Current Date Time\n            const date = new Date(0);\n\n             // Convert EXp Time to UTC\n            let tokenExpDate = date.setUTCSeconds(decoded.exp);\n\n            // If Value of Token time greter than \n\n            if(tokenExpDate.valueOf() > new Date().valueOf()) \n            {\n                return true;\n            }\n\n            console.log(\"NEW DATE \" + new Date().valueOf());\n            console.log(\"Token DATE \" + tokenExpDate.valueOf());\n\n            return false;\n          \n        }\n        return false;\n    }\n\n    logout() {\n        // remove user from local storage to log user out\n        this.loginStatus.next(false);\n        localStorage.removeItem('token');\n        localStorage.removeItem('userRole');\n        localStorage.removeItem('username');\n        localStorage.removeItem('expiration');\n        localStorage.setItem('loginStatus', '0');\n        this.router.navigate(['/login']);\n        console.log(\"Logged Out Successfully\");\n    }\n}","export * from './alert.service';\nexport * from './authentication.service';\nexport * from './user.service';","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from '../../environments/environment';\nimport { User } from '../_models';\n\n@Injectable()\nexport class UserService {\n    constructor(private http: HttpClient) { }\n\n    getAll() {\n        return this.http.get<User[]>(`${environment.apiUrl}/users`);\n    }\n\n    getById(id: number) {\n        return this.http.get(`${environment.apiUrl}/users/` + id);\n    }\n\n    register(user: User) {\n        return this.http.post(`${environment.apiUrl}/users/register`, user);\n    }\n\n    update(user: User) {\n        return this.http.put(`${environment.apiUrl}/users/` + user.id, user);\n    }\n\n    delete(id: number) {\n        return this.http.delete(`${environment.apiUrl}/users/` + id);\n    }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  \n  ngOnInit() {\n   \n}\n}\n","<body>\r\n    <app-header></app-header>\r\n    <router-outlet></router-outlet>\r\n    <app-loader></app-loader>\r\n</body>\r\n            ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { FormsModule } from '@angular/forms'; \nimport { ReactiveFormsModule }    from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\n\nimport {DataTablesModule} from 'angular-datatables';\n\nimport { routing }        from './app.routing';\n\nimport { AlertComponent,DatePicker } from './_directives';\nimport { AuthGuard } from './_guards';\nimport { JwtInterceptor, ErrorInterceptor } from './_helpers';\nimport { AlertService, AuthenticationService, UserService } from './_services';\nimport {ApiService}  from './_services/api.service';\nimport { HomeComponent } from './home';\nimport { LoginComponent } from './login';\n\nimport {RawMaterial} from './_entry/raw_material';\nimport {FinishedMaterial} from './_entry/finished_material';\nimport {SalesCompoent} from './_entry/sales'\nimport {SemiFinishedProduct} from './_entry/semi.finished';\nimport {HeaderComponent} from './header/header.component'\nimport { NgbDate, NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { LoaderComponent } from './loader/loader.component'\nimport {SpinnerService} from './loader/spinner.service'\nimport {Reports} from './_entry/report'\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport {PrintPageComponent,Filters} from './component'\nimport {RawMaterialReport} from './component/reports'\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    DataTablesModule,\n    BrowserModule,\n    NgbModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        routing,\n        NgMultiSelectDropDownModule.forRoot()\n  ],\n  declarations: [\n  AppComponent,\n  AlertComponent,\n  HomeComponent,\n  LoginComponent,\n  \n  RawMaterial,\n  SemiFinishedProduct,\n  FinishedMaterial,\n  HeaderComponent,\n  SalesCompoent,\n  Reports,\n  DatePicker,\n  LoaderComponent,\n  PrintPageComponent,Filters,\n  RawMaterialReport    ],\nproviders: [\n  AuthGuard,\n  AlertService,\n  AuthenticationService,\n  UserService,\n  ApiService,\n  SpinnerService,\n  { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n  { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home';\nimport { LoginComponent } from './login'\nimport { AuthGuard } from './_guards';\nimport {RawMaterial} from './_entry/raw_material';\nimport {FinishedMaterial} from './_entry/finished_material'\nimport {SalesCompoent} from './_entry/sales'\nimport {SemiFinishedProduct} from './_entry/semi.finished'\nimport {Reports} from './_entry/report'\nconst appRoutes: Routes = [\n    { path: '',component:RawMaterial, canActivate: [AuthGuard] ,pathMatch: 'full' },\n    { path: 'login', component: LoginComponent },\n    { path: 'raw',component:RawMaterial,canActivate: [AuthGuard]},\n    { path: 'semifinished',component:SemiFinishedProduct,canActivate: [AuthGuard]},\n    { path: 'finished', component:FinishedMaterial,canActivate: [AuthGuard]},\n    { path: 'sales', component:SalesCompoent,canActivate: [AuthGuard]},\n    {path:'reports',component:Reports,canActivate: [AuthGuard]},\n    \n    // otherwise redirect to home\n    { path: '**', redirectTo: '' }\n];\n\nexport const routing = RouterModule.forRoot(appRoutes);","import { FormBuilder, FormGroup , FormControl,Validators} from '@angular/forms';\r\nimport { Component, OnInit ,Output,EventEmitter} from '@angular/core';\r\nimport {ApiService} from '../_services/api.service';\r\n@Component({\r\n  selector: 'filter-comp',\r\n  templateUrl: './filter-comp.html',\r\n  styleUrls: ['./common.css']\r\n})\r\nexport class Filters implements OnInit{\r\n  myForm:FormGroup;\r\n  disabled = false;\r\n  ShowFilter = false;\r\n  limitSelection = false;\r\n  inventory = [];\r\n    showlist = []\r\n  selectedItems = [];\r\n  selectedsearch =[];\r\n  dropdownSettings: any = {};\r\n  reportTypes :any\r\n\r\n  @Output() searchParam = new EventEmitter<any>();\r\n  constructor(private apiService:ApiService,private fb: FormBuilder) {}\r\n  ngOnInit() {\r\n     \r\n    this.dropdownSettings = {\r\n        singleSelection: true,\r\n        idField: 'item_id',\r\n        textField: 'item_text',\r\n        itemsShowLimit: 2,\r\n        allowSearchFilter: this.ShowFilter\r\n    };\r\n    this.myForm = this.fb.group({\r\n        trans: new FormControl(\"\",[Validators.required]),\r\n        searchBy :new FormControl(\"\",[Validators.required]),\r\n        fromDate:new FormControl(\"\",[]),\r\n        toDate :new FormControl(\"\",[])\r\n    });\r\n    this.apiService.searchReportOptions().subscribe(data=>{\r\n        console.log(\"data=======================\")\r\n      this.showlist= data['options_search1']\r\n      console.log(\"this.showlist \",this.showlist)\r\n      console.log(this.showlist[0])\r\n      this.myForm.controls['searchBy'].setValue(this.showlist[0]);\r\n      this.reportTypes = data['reportType']\r\n      this.inventory = this.reportTypes['1']\r\n    })\r\n  \r\n}\r\n\r\nonItemSelect(item: any) {\r\n   \r\n    console.log('onItemSelect', item.item_id);\r\n    console.log(this.selectedsearch)\r\n    console.log(this.myForm.get('searchBy').value)\r\n    this.inventory = this.reportTypes[item.item_id]\r\n}\r\nonSelectAll(items: any) {\r\n    console.log('onSelectAll', items);\r\n}\r\ntoogleShowFilter() {\r\n    this.ShowFilter = !this.ShowFilter;\r\n    this.dropdownSettings = Object.assign({}, this.dropdownSettings, { allowSearchFilter: this.ShowFilter });\r\n}\r\n\r\nhandleLimitSelection() {\r\n    if (this.limitSelection) {\r\n        this.dropdownSettings = Object.assign({}, this.dropdownSettings, { limitSelection: 2 });\r\n    } else {\r\n        this.dropdownSettings = Object.assign({}, this.dropdownSettings, { limitSelection: null });\r\n    }\r\n}\r\nsubmit(){\r\n    let lookfor = (this.myForm.get('searchBy').value)[0]['item_id']\r\n    let reportType = (this.myForm.get('trans').value)[0]['item_id']\r\n    let fromDate = this.myForm.get('fromDate').value\r\n    let toDate = this.myForm.get(\"toDate\").value\r\n    \r\n  this.searchParam.emit({lookfor,reportType,fromDate,toDate})\r\n}\r\nprintPage(){\r\n    window.print();\r\n}\r\n}","<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <form [formGroup]=\"myForm\" class=\"contact-form\"(ngSubmit)=\"submit()\">  \r\n           <div class=\"form-row\">\r\n      <div class=\"form-group col-md-3\">\r\n        <label for=\"material\" class=\"col-sm-4 col-form-label\">Looking for</label>\r\n        <ng-multiselect-dropdown\r\n        class=\"col-md-3\"\r\n        name=\"show\"\r\n        [placeholder]=\"'show'\"\r\n        [data]=\"showlist\"\r\n        formControlName=\"searchBy\"\r\n        [disabled]=\"disabled\"\r\n        [settings]=\"dropdownSettings\"\r\n        (onSelect)=\"onItemSelect($event)\">\r\n        </ng-multiselect-dropdown>\r\n      </div>\r\n      <div class=\"form-group col-md-3\">\r\n        \r\n        <label for=\"inputEmail4\" class=\"col-sm-4 col-form-label\">from date</label>\r\n        <div class=\"input-group\">\r\n          <input class=\"form-control\" \r\n              name=\"fd\" formControlName=\"fromDate\" ngbDatepicker #d=\"ngbDatepicker\" value=\"fromDate\">\r\n           <div class=\"input-group-append\">\r\n            <button class=\"btn btn-outline-secondary calendar\" (click)=\"d.toggle()\" type=\"button\"></button>\r\n          </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group col-md-3\">\r\n        \r\n      <label for=\"inputEmail4\" class=\"col-sm-4 col-form-label\">To date</label>\r\n      <div class=\"input-group\">\r\n        <input class=\"form-control\" \r\n            name=\"td\" formControlName=\"toDate\" ngbDatepicker #e=\"ngbDatepicker\" value=\"toDate\">\r\n         <div class=\"input-group-append\">\r\n          <button class=\"btn btn-outline-secondary calendar\" (click)=\"e.toggle()\" type=\"button\"></button>\r\n        </div>\r\n      </div>\r\n  </div>\r\n      <div class=\"form-group col-md-3\">\r\n      <label for=\"size\" class=\"col-sm-2 col-form-label\">Report</label>\r\n      <ng-multiselect-dropdown\r\n        class=\"col-md-3\"\r\n        name=\"inventory\"\r\n        [placeholder]=\"'Choose Inventory'\"\r\n        [data]=\"inventory\"\r\n        formControlName=\"trans\"\r\n        [disabled]=\"disabled\"\r\n        [settings]=\"dropdownSettings\">\r\n        </ng-multiselect-dropdown>\r\n      </div>\r\n    </div>\r\n   \r\n <div class=\"row\">\r\n     <div class=\"form-group col-md-2\" >\r\n              <div class=\"col-sm-offset-4\" >\r\n                  <button type=\"submit\" class=\"btn btn-default center-block \" [disabled]=\"!myForm.valid\">search</button>\r\n              </div>\r\n    </div>\r\n    \r\n    \r\n    </div>\r\n  </form> \r\n        \r\n    </div>\r\n\r\n</div>","export * from './filter-comp';\r\nexport * from './printpage.component';\r\n","import { Component, OnInit,Input,OnDestroy,ViewChild,ChangeDetectorRef } from '@angular/core';\r\nimport {ApiService} from '../_services/api.service';\r\n\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { Subject,Observable,forkJoin } from 'rxjs';\r\n\r\ninterface Columns{\r\n  data: string, \r\n  title: string, \r\n  visible: boolean\r\n}\r\nconst j = {\r\n  1: \"Raw Material\",\r\n  2: \"Semi Finished Product\",\r\n  3: \"Finished Product\",\r\n  4: \"Sales\"\r\n}\r\n@Component({\r\n  selector: 'app-print-page',\r\n  templateUrl: './print-page.component.html',\r\n  styleUrls: ['./print-page.component.css'],\r\n \r\n})\r\nexport class PrintPageComponent implements OnInit {\r\n  @ViewChild(DataTableDirective) dtElement: DataTableDirective;\r\n\r\n \r\n  dtRendered = true;\r\n  dtOptions: any = {};\r\n  dtInstance: Promise<DataTables.Api>;\r\n  dtTrigger: Subject<any> = new Subject();\r\n\r\n  repotTitle:string\r\n  data=[]\r\n  columns:Array<Columns>=[]\r\n  @Input()  set searchParam (params){\r\n        let reportType = params['reportType']   \r\n        let fetch = params['lookfor']\r\n        console.log(\"reportType====\",reportType)\r\n        console.log(\"fetch ==\",fetch)\r\n        if(fetch ==1){\r\n            this.get_Stock_in_hand(reportType,fetch)\r\n        }else{\r\n          this.getTransactions(reportType,fetch,params['fromDate'],params['toDate'])\r\n        }\r\n        \r\n        \r\n  }\r\n  get_Stock_in_hand(reportType,fetch){\r\n    this.repotTitle = j[reportType]+\" \"+\"Stock In hand Report\"\r\n    let option = this.apiserive.getOptions(reportType,fetch)\r\n    let SIH=  this.apiserive.getSIH(reportType)\r\n\r\n      forkJoin([option, SIH]).subscribe(results => {\r\n        // results[0] is our character\r\n        // results[1] is our character homeworld\r\n        let options = results[0] ;\r\n        let data = results[1];\r\n        //console.log(options)\r\n        this.columns = options\r\n        //console.log(data)\r\n        this.data=data['data']\r\n        this.updateData()\r\n      });\r\n  }\r\n  getTransactions(reportType,fetch,fromDate,toDate){\r\n    \r\n    this.repotTitle = j[reportType]+\" \"+\"Stock In hand Report\"\r\n    let option = this.apiserive.getOptions(reportType,fetch)\r\n    let transaction=  this.apiserive.getTransactionData(reportType,{fromDate:fromDate,toDate:toDate})\r\n      forkJoin([option, transaction]).subscribe(results => {\r\n        // results[0] is our character\r\n        // results[1] is our character homeworld\r\n        let options = results[0] ;\r\n        let data = results[1];\r\n        //console.log(options)\r\n        this.columns = options\r\n        //console.log(data)\r\n        this.data=data['data']\r\n        this.updateData()\r\n      });\r\n  }\r\n  constructor(private apiserive:ApiService,\r\n    public cdr: ChangeDetectorRef\r\n  ) {}\r\n \r\n\r\n\r\n  jsonData = {\"data\":[{\"id\":860,\"firstName\":\"Superman\",\"lastName\":\"Yoda\"},{\"id\":870,\"firstName\":\"Foo\",\"lastName\":\"Whateveryournameis\"},{\"id\":590,\"firstName\":\"Toto\",\"lastName\":\"Titi\"}]};\r\n  jsonData1 = {\"data\":[{\"idx\":860,\"name\":\"Superman\",\"last\":\"Yoda\"},{\"idx\":870,\"name\":\"Foo\",\"last\":\"Whateveryournameis\"}]};\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.generateData();\r\n  }\r\n\r\n  ngOnChanges() {\r\n    \r\n  }\r\n\r\n  generateData() {\r\n    console.log(\"generateData\")\r\n    this.dtOptions = {\r\n      data: [],\r\n      columns: []\r\n    };\r\n  }\r\n\r\n  updateData() {\r\n    // destroy you current configuration\r\n    console.log(\"updateData\")\r\n    this.dtRendered = false\r\n    this.dtOptions = {\r\n      \r\n      columns: this.columns,\r\n      destroy: true,\r\n      searching: true,\r\n      displayLength: 15,\r\n      paginationType: \"full_numbers\",\r\n      processing: true,\r\n      dom: 'Bfrtip',\r\n      buttons: [\r\n          'copy', 'csv', 'pdf','excel', \r\n          {\r\n            extend: 'print',\r\n            title: this.repotTitle\r\n        }\r\n      ],\r\n      responsive: true\r\n  \r\n    };\r\n    // make sure your template notices it\r\n    this.cdr.detectChanges();\r\n    // initialize them again\r\n    this.dtRendered = true\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n   reRenderDataTable(): void {\r\n    // this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      // Destroy the table first\r\n      //  dtInstance.destroy();\r\n      // Call the dtTrigger to rerender again\r\n      //  this.dtTrigger.next();\r\n    // });\r\n  }\r\n\r\n\r\n  \r\n}","<table  *ngIf=\"dtRendered\" class=\"table table-striped table-bordered dt-responsive nowrap display\" datatable [dtOptions]=\"dtOptions\"  style=\"width:100%\">\r\n   <tbody>\r\n      <tr *ngFor=\"let row of data\">\r\n          <td *ngFor=\"let col of columns\">{{row[col.data]}}</td>\r\n      </tr>\r\n   </tbody>\r\n\r\n</table>","export * from './rawMaterial.report';\r\n","import { Component, OnInit, Input,OnDestroy,ViewChild,ChangeDetectorRef } from '@angular/core';\r\nimport {ApiService} from '../../_services/api.service';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { Subject } from 'rxjs';\r\n@Component({\r\n  selector: 'show-records',\r\n  templateUrl: './rawMaterial.report.html'\r\n})\r\nexport class RawMaterialReport implements OnInit,OnDestroy{\r\n  title = 'angulardatatables';\r\n\r\n\r\n  @ViewChild(DataTableDirective)\r\n  dtElement: DataTableDirective;\r\n\r\n  dtOptions: any= {};\r\n  dtTrigger:Subject<any>= new Subject();\r\n  dtRendered = true;\r\n  //dtInstance: Promise<DataTables.Api>;\r\n\r\n  @Input()  columns\r\n  @Input() recrods\r\n \r\n  constructor(private apiserive:ApiService,private cdRef: ChangeDetectorRef) {\r\n    \r\n  }\r\n  \r\n  \r\n \r\n  ngOnInit() {\r\n    console.log(\"recrods================\",this.recrods)\r\n    console.log(\"options ================\",this.dtOptions)\r\n  }   \r\n\r\n  \r\n    generateData() {\r\n      this.dtOptions = {\r\n        data: this.recrods,\r\n        columns: this.columns,\r\n        destroy: true,\r\n        searching: false,\r\n        displayLength: 15,\r\n        paginationType: \"full_numbers\",\r\n        processing: true,\r\n        dom: 'Bfrtip',\r\n        buttons: [\r\n            'copy', 'csv', 'excel', 'print'\r\n        ],\r\n        responsive: true\r\n      };\r\n      console.log(\"dtoptions \", this.dtOptions)\r\n    }\r\n    updateData() {\r\n      // destroy you current configuration\r\n      this.dtRendered = false\r\n      this.generateData()\r\n      // make sure your template notices it\r\n      this.cdRef.detectChanges();\r\n      // initialize them again\r\n      this.dtRendered = true\r\n      this.cdRef.detectChanges();\r\n    }\r\n    ngAfterViewInit(): void {\r\n      console.log(\"ngAfterViewInit\")\r\n     // this.dtTrigger.next();\r\n    }\r\n  \r\n    ngOnDestroy(): void {\r\n      // Do not forget to unsubscribe the event\r\n      this.dtTrigger.unsubscribe();\r\n    }\r\n  \r\n    rerender(): void {\r\n      console.log(\"rerender\")\r\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n        // Destroy the table first\r\n        dtInstance.destroy();\r\n        // Call the dtTrigger to rerender again\r\n        this.dtTrigger.next();\r\n      });\r\n    }\r\n    \r\n}\r\n\r\n","\r\n<table  *ngIf=\"dtRendered\"class=\"table table-striped table-bordered dt-responsive nowrap\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" style=\"width:100%\">\r\n</table>","import { Observable } from 'rxjs';\nimport { AuthenticationService } from '../_services';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.css']}\n)\nexport class HeaderComponent implements OnInit {\n\n  isLoggedIn$: Observable<boolean>;\n\n  constructor(private authService: AuthenticationService) { }\n\n  ngOnInit() {\n    console.log(\"this.isLoggedIn$\",this.isLoggedIn$ )\n    console.log(this.authService.isLoggedIn)\n    this.isLoggedIn$ = this.authService.isLoggedIn;\n  }\n\n  onLogout() {\n    this.authService.logout();\n  }\n\n}","<header class=\"navbar navbar-expand navbar-dark flex-column flex-md-row bd-navbar\" *ngIf=\"isLoggedIn$ | async\">\n    <div class=\"navbar-nav-scroll\">\n        <ul class=\"navbar-nav bd-navbar-nav flex-row\">\n            <li class=\"nav-item\">\n                <a routerLink=\"raw\" class=\"nav-link\">RAW MATERIAL</a>\n            </li>\n            <li class=\"nav-item\">\n                <a routerLink=\"semifinished\" class=\"nav-link\"> SEMI FINISHED</a>\n            </li>\n            <li class=\"nav-item\">\n                <a routerLink=\"finished\" class=\"nav-link\">FINISHED PRODUCT</a>\n            </li>\n            <li class=\"nav-item\">\n                <a routerLink=\"sales\" class=\"nav-link\">SALES</a>\n            </li>\n            <li class=\"nav-item\">\n                <a routerLink=\"reports\" class=\"nav-link\">REPORT</a>\n            </li>\n        </ul>\n    </div>\n</header>","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { User } from '../_models';\nimport { UserService } from '../_services';\n\n@Component({templateUrl: 'home.component.html'})\nexport class HomeComponent implements OnInit {\n    currentUser: User;\n    users: User[] = [];\n\n    constructor(private userService: UserService) {\n        this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    }\n\n    ngOnInit() {\n        this.loadAllUsers();\n    }\n\n    deleteUser(id: number) {\n        this.userService.delete(id).pipe(first()).subscribe(() => { \n            this.loadAllUsers() \n        });\n    }\n\n    private loadAllUsers() {\n        this.userService.getAll().pipe(first()).subscribe(users => { \n            this.users = users; \n        });\n    }\n}","<div>\n    hii\n</div>","export * from './home.component';","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { SpinnerService } from './spinner.service';\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.css']\n})\nexport class LoaderComponent implements OnInit {\n\n  showSpinner = false;\n\n  constructor(private spinnerService: SpinnerService, private cdRef: ChangeDetectorRef) {\n\n  }\n\n  ngOnInit() {\n    this.init();\n  }\n\n  init() {\n    this.spinnerService.getSpinnerObserver().subscribe((status) => {\n      this.showSpinner = (status === 'start');\n      this.cdRef.detectChanges();\n    });\n  }\n\n}","<div class=\"page-overlay-wrapper\" *ngIf=\"showSpinner\">\n  <div class=\"spinner-1\"></div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SpinnerService {\r\n\r\n  private count = 0;\r\n  private spinner$ = new BehaviorSubject<string>('');\r\n\r\n  constructor() { }\r\n\r\n  getSpinnerObserver(): Observable<string> {\r\n    return this.spinner$.asObservable();\r\n  }\r\n\r\n  requestStarted() {\r\n    if (++this.count === 1) {\r\n      this.spinner$.next('start');\r\n    }\r\n  }\r\n\r\n  requestEnded() {\r\n    if (this.count === 0 || --this.count === 0) {\r\n      this.spinner$.next('stop');\r\n    }\r\n  }\r\n\r\n  resetSpinner() {\r\n    this.count = 0;\r\n    this.spinner$.next('stop');\r\n  }\r\n}","export * from './login.component';","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators,FormControl } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\n\nimport { AlertService, AuthenticationService } from '../_services';\n\n@Component({\n    templateUrl: 'login.component.html',\nstyleUrls: ['./login.component.css']})\nexport class LoginComponent implements OnInit {\n    loginForm: FormGroup;\n    Username :  FormControl;\n    Password :  FormControl;\n    returnUrl : string;\n    ErrorMessage: string;\n    invalidLogin: boolean;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService,\n        private alertService: AlertService) {}\n\n    ngOnInit() {\n        this.Username = new FormControl('', [Validators.required]);\n        this.Password = new FormControl('', [Validators.required]);\n\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n        this.loginForm = this.formBuilder.group({\n            \"Username\" : this.Username,\n            \"Password\" : this.Password\n        });\n        /*\n        // reset login status\n        this.authenticationService.logout();\n        */\n\n        \n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.loginForm.controls; }\n\n    onSubmit() \n    {\n        let userlogin = this.loginForm.value;\n        if (this.loginForm.invalid) {\n            return;\n        }\n        this.authenticationService.login(userlogin.Username, userlogin.Password).subscribe(result => {\n            console.log(\"result \",result)\n            let token = (<any>result).token;\n            console.log(token);\n            console.log(result.userRole);\n            console.log(\"User Logged In Successfully\");\n            this.invalidLogin = false;\n            console.log(this.returnUrl);\n            this.router.navigateByUrl(this.returnUrl);\n        \n        },\n        error => \n        {\n            console.log(\"error\")\n            console.log(error)\n            this.invalidLogin = true;\n\n            this.ErrorMessage = error.error.loginError;\n\n            console.log(this.ErrorMessage);\n        })\n\n    }\n\n\n\n\n\n   \n}\n","<!-- LOGIN SECTION -->\n<section class=\"login-block\">\n    <!-- ALERT  WARNING START -->\n    <div class=\"text-center mb-3 alert alert-warning alert-dismissible\" *ngIf=\"invalidLogin\"  role=\"alert\">\n      <strong>{{ErrorMessage}}</strong>\n        <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div><!-- ALERT  WARNING END -->\n\n    <!-- LOGIN CONTAINER START -->\n    <div class=\"container signLog\">\n        <div class=\"row\">\n\n            <!-- LOGIN COLUMN START -->\n            <div class=\"col-md-8 login-sec\">\n                <h2 class=\"text-center\">Login Now</h2>\n                <!-- LOGIN FORM START -->\n                <form class=\"login-form form\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n                    <div class=\"form-group\">\n                        <label for=\"UserName\" class=\"text-uppercase\">Username</label>\n                        <input formControlName=\"Username\" type=\"text\" class=\"form-control\" placeholder=\"\" required autofocus>\n                        <div *ngIf=\"Username.touched && Username.errors\"\n                             class=\"errorMessage\">\n                          <span *ngIf=\"Username.hasError('required')\">Username is required.</span>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"Password\" class=\"text-uppercase\">Password</label>\n                        <input formControlName=\"Password\" type=\"password\" class=\"form-control\" placeholder=\"\" required autofocus>\n                        <div *ngIf=\"Password.touched && Password.errors\"\n                             class=\"errorMessage\">\n                          <span *ngIf=\"Password.hasError('required')\">Password is required.</span>\n\n                        </div>\n                    </div>\n\n                    <input type=\"submit\" class=\"btn  btn-login btn-block\" value=\"Submit\" [disabled]=\"loginForm.invalid\" />\n\n                </form><!-- LOGIN FORM END -->\n   </div> <!-- LOGIN SECTION END -->\n            <!-- CAROUSEL COLUMN START -->\n            <div class=\"col-md-4 banner-sec\">\n\n                <div id=\"carouselExampleIndicators\" class=\"carousel slide\" data-ride=\"carousel\">\n                    \n                    <div class=\"carousel-inner\" role=\"listbox\">\n                        <div class=\"carousel-item active\">\n                            <img class=\"d-block img-fluid\" src=\"/images/image1.jpg\" alt=\"First slide\">\n                            <div class=\"after\"></div>\n                            <div class=\"carousel-caption d-none d-md-block\">\n                                <div class=\"banner-text\">\n                                     </div>\n                            </div>\n                        </div>\n                      \n                    </div>\n                </div>\n            </div><!-- CAROUSEL COLUMN START -->\n        </div>\n    </div> <!-- LOGIN CONTAINER END -->\n</section>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:4000',\n  origin: 'https://' + document.domain + '/v1/',\n  api: 'api',\n  envName: 'dev',\n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}